{
  "info": {
    "name": "Mobile - Used by Jenkins - Public Visibility",
    "_postman_id": "4f1a88c8-b0f3-da27-0f9e-9a544c47d615",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "6d58a872-59bc-c272-0846-359fa0d44066",
      "name": "Agent",
      "description": "",
      "item": [
        {
          "_postman_id": "969ffd14-5234-189f-a9d8-d3b6cf97b141",
          "name": "Init VAR ENV - STAGING MOBILE copy",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "postman.clearEnvironmentVariables();",
                  "",
                  "postman.setEnvironmentVariable(\"server\", \"http://staging.opengst.fr/\");",
                  "postman.setEnvironmentVariable(\"db\", \"mobile\");",
                  "",
                  "postman.setEnvironmentVariable(\"login_admin\", \"admin\");",
                  "postman.setEnvironmentVariable(\"password_admin\", \"FMAlV00516562798\");",
                  "",
                  "postman.setEnvironmentVariable(\"login_accountNotConnected\", \"MainAccessUserForCitizenMobile\");",
                  "postman.setEnvironmentVariable(\"password_accountNotConnected\", \"my8Vk4eThcWz9QdjfSXvCBw3K\");",
                  "",
                  "postman.setEnvironmentVariable(\"login_agent\", \"fblanchard\");",
                  "postman.setEnvironmentVariable(\"password_agent\", \"12345678\");"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://www.google.com",
            "description": null
          },
          "response": []
        },
        {
          "_postman_id": "7869aca4-8e6b-3944-b816-e13b327cfda3",
          "name": "Authenticate copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"sessionId\", jsonData.result.session_id);",
                  "postman.setEnvironmentVariable(\"uid\", jsonData.result.uid);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=UTF-8"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"r1\",\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"call\",\r\n  \"params\": {\r\n    \"login\": \"{{login_agent}}\",\r\n    \"password\": \"{{password_agent}}\",\r\n    \"db\": \"{{db}}\"\r\n  }\r\n}"
            },
            "url": "{{server}}/web/session/authenticate",
            "description": null
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "60b9bbc9-4795-5ca0-6331-61db1726a990",
      "name": "Mobile AppyConnect.City",
      "description": "",
      "item": [
        {
          "_postman_id": "cbf2ee17-fe56-bb35-337a-476102cdb08c",
          "name": "BEGIN RUN HERE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"BEGIN\"] = 1 === 1;",
                  "postman.clearEnvironmentVariable(\"lastStepScenarioCitoyen\")",
                  "postman.setNextRequest(\"000 - Global Scenario\");"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://www.google.com",
            "description": null
          },
          "response": []
        },
        {
          "_postman_id": "c689f950-3910-8c76-0652-27c19e9a915f",
          "name": "000 - Global Scenario",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Switch..\"] = 1 === 1;",
                  "",
                  "switch(postman.getEnvironmentVariable(\"lastStepScenarioCitoyen\")) {",
                  "    ",
                  "    case undefined:",
                  "        tests[\"Utils - Clear Environnement Variables\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Utils - Clear Environnement Variables\");",
                  "        break;",
                  "        ",
                  "    case \"Clear Environnement Variables\":",
                  "        tests[\"Authenticate with globalAccount\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Authenticate with globalAccount\");",
                  "        break;",
                  "        ",
                  "    case \"Authenticate with globalAccount\":",
                  "        tests[\"Get CategorieOrganisations with code PARTICULIER\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Get CategorieOrganisations with code PARTICULIER\");",
                  "        break;        ",
                  "        ",
                  "    case \"Get CategorieOrganisations with code PARTICULIER\":",
                  "        tests[\"Get Organisation with last CategorieOrganisation\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Get Organisation with last CategorieOrganisation\");",
                  "        break;              ",
                  "        ",
                  "    case \"Get Organisation with last CategorieOrganisation\":",
                  "        tests[\"Get GroupId for Demandeur\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Get GroupId for Demandeur\");",
                  "        break;        ",
                  "        ",
                  "    case \"Get GroupId for Demandeur\":",
                  "        tests[\"Create User on Particuliers Commune\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Create User on Particuliers Commune\");",
                  "        break;        ",
                  "        ",
                  "    case \"Create User on Particuliers Commune\":",
                  "        tests[\"Authenticate with userAccount\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Authenticate with userAccount\");",
                  "        break;              ",
                  "        ",
                  "    case \"Authenticate with userAccount\":",
                  "        tests[\"Get session info\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Get session info\");",
                  "        break;        ",
                  "        ",
                  "    case \"Get session info\":",
                  "        tests[\"Get user informations\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Get user informations\");",
                  "        break;        ",
                  "        ",
                  "    case \"Get user informations\":",
                  "        tests[\"Get contact informations\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Get contact informations\");",
                  "        break;        ",
                  "        ",
                  "    case \"Get contact informations\":",
                  "        tests[\"Search_read All Category\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Search_read All Category\");",
                  "        break;              ",
                  "        ",
                  "    case \"Search_read All Category\":",
                  "        tests[\"Search_read All Demandes d'intervention\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Search_read All Demandes d'intervention\");",
                  "        break;        ",
                  "        ",
                  "    case \"Search_read All Demandes d'intervention\":",
                  "        tests[\"Create Demande intervention\"] = 1 === 1;",
                  "        postman.setNextRequest(\"Create Demande intervention\");",
                  "        break;        ",
                  "        ",
                  "    case \"Create Demande intervention\":",
                  "        tests[\"END\"] = 1 === 1;",
                  "        postman.setNextRequest(null);",
                  "        break;     ",
                  "        ",
                  "    default:",
                  "        tests[\"ERROR ON lastStepScenarioCitoyen\"] = 1 === 0;",
                  "        postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://www.google.com",
            "description": null
          },
          "response": []
        },
        {
          "_postman_id": "ebcd4ec5-2e4c-99c6-6654-137ad18e980c",
          "name": "Utils - Clear Environnement Variables",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var server = postman.getEnvironmentVariable(\"server\");",
                  "var db = postman.getEnvironmentVariable(\"db\");",
                  "var login = postman.getEnvironmentVariable(\"login\");",
                  "var password = postman.getEnvironmentVariable(\"password\");",
                  "var accountNotConnectedLogin = postman.getEnvironmentVariable(\"accountNotConnectedLogin\");",
                  "var accountNotConnectedPassword = postman.getEnvironmentVariable(\"accountNotConnectedPassword\");",
                  "var accountNotConnectedName = postman.getEnvironmentVariable(\"accountNotConnectedName\");",
                  "",
                  "postman.clearEnvironmentVariables();",
                  "",
                  "postman.setEnvironmentVariable(\"server\", server);",
                  "postman.setEnvironmentVariable(\"db\", db);",
                  "postman.setEnvironmentVariable(\"login\", login);",
                  "postman.setEnvironmentVariable(\"password\", password);",
                  "postman.setEnvironmentVariable(\"accountNotConnectedLogin\", accountNotConnectedLogin);",
                  "postman.setEnvironmentVariable(\"accountNotConnectedPassword\", accountNotConnectedPassword);",
                  "postman.setEnvironmentVariable(\"accountNotConnectedName\", accountNotConnectedName);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "/*",
                  " * TESTS ",
                  " */",
                  "",
                  "",
                  "",
                  "",
                  "/*",
                  " * LOGIC",
                  " */",
                  "",
                  "",
                  "",
                  "",
                  "/*",
                  " * SCENARIO",
                  " */ ",
                  "",
                  "postman.setEnvironmentVariable(\"lastStepScenarioCitoyen\", \"Clear Environnement Variables\");",
                  "postman.setNextRequest(\"000 - Global Scenario\");"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://www.google.com",
            "description": null
          },
          "response": []
        },
        {
          "_postman_id": "6292307e-33b7-bd42-5d14-982a0666c3f0",
          "name": "Authenticate with globalAccount",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "/*",
                  " * TESTS ",
                  " */",
                  "",
                  "//Check status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Check if the content type is json",
                  "var contentTypeHeader = responseHeaders.hasOwnProperty(\"Content-Type\")",
                  "if (contentTypeHeader) {",
                  "    tests[\"Content-Type is application/json\"] = ",
                  "      responseHeaders[\"Content-Type\"].has(\"application/json\");",
                  "}",
                  "",
                  "//Check if really authenticate",
                  "tests[\"Authenticate\"] = jsonData.result.uid !== false;",
                  "",
                  "",
                  "/*",
                  " * LOGIC",
                  " */",
                  "",
                  "postman.setEnvironmentVariable(\"sessionId\", jsonData.result.session_id);",
                  "postman.setEnvironmentVariable(\"uid\", jsonData.result.uid);",
                  "",
                  "",
                  "/*",
                  " * SCENARIO",
                  " */ ",
                  " ",
                  "postman.setEnvironmentVariable(\"lastStepScenarioCitoyen\", \"Authenticate with globalAccount\");",
                  "postman.setNextRequest(\"000 - Global Scenario\");"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=UTF-8"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"jsonrpc\":\"2.0\",\r\n   \"method\":\"call\",\r\n   \"params\":{\r\n      \"db\": \"{{db}}\",\r\n      \"login\": \"{{accountNotConnectedLogin}}\",\r\n      \"password\": \"{{accountNotConnectedPassword}}\"\r\n   }\r\n}"
            },
            "url": "{{server}}/web/session/authenticate",
            "description": null
          },
          "response": [
            {
              "id": "7cba02b5-4f5f-fefc-35c4-bc14e1bba8be",
              "name": "stag demo - dstdst",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "name": "Connection",
                  "key": "Connection",
                  "value": "keep-alive",
                  "description": ""
                },
                {
                  "name": "Content-Encoding",
                  "key": "Content-Encoding",
                  "value": "gzip",
                  "description": ""
                },
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": ""
                },
                {
                  "name": "Date",
                  "key": "Date",
                  "value": "Wed, 12 Apr 2017 14:17:34 GMT",
                  "description": ""
                },
                {
                  "name": "Server",
                  "key": "Server",
                  "value": "nginx/1.4.6 (Ubuntu)",
                  "description": ""
                },
                {
                  "name": "Transfer-Encoding",
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "description": ""
                },
                {
                  "name": "Vary",
                  "key": "Vary",
                  "value": "Accept-Encoding",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1054",
              "body": "{\"jsonrpc\": \"2.0\", \"id\": null, \"result\": {\"uid\": 82, \"db\": \"demo\", \"session_id\": \"a71fcc8234a34bfb9571f8c39ff7ba00\", \"openerp_entreprise\": false, \"context\": {\"lang\": \"fr_FR\", \"project_id\": false, \"tz\": \"Europe/Paris\", \"section_id\": false, \"uid\": 82}, \"login\": \"dstdst\"}}"
            }
          ]
        },
        {
          "_postman_id": "d33e4b3c-abc8-2d05-a6b8-8a1c50e1d48d",
          "name": "Get CategorieOrganisations with code PARTICULIER",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "/*",
                  " * TESTS ",
                  " */",
                  "",
                  "",
                  "",
                  "",
                  "/*",
                  " * LOGIC",
                  " */",
                  "",
                  "postman.setEnvironmentVariable(\"categorieOrganisationId\", jsonData.result.records[0].id);",
                  "",
                  "",
                  "/*",
                  " * SCENARIO",
                  " */ ",
                  "",
                  "postman.setEnvironmentVariable(\"lastStepScenarioCitoyen\", \"Get CategorieOrganisations with code PARTICULIER\");",
                  "postman.setNextRequest(\"000 - Global Scenario\");"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=UTF-8"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n   \"jsonrpc\":\"2.0\",\n   \"method\":\"call\",\n   \"params\":{\n      \"sort\":\"id DESC\",\n      \"limit\":1,\n      \"offset\":0,\n      \"model\":\"openstc.partner.type\",\n      \"domain\":[\n         \"|\",\n         \"|\",\n         [\n            \"code\",\n            \"=\",\n            \"PARTICULIER\"\n         ],\n         [\n            \"code\",\n            \"=\",\n            \"3\"\n         ],\n     [\n            \"name\",\n            \"=\",\n            \"Particulier\"\n         ]\n      ],\n      \"fields\":[\n         \"id\"\n      ],\n      \"session_id\":\"{{sessionId}}\"\n   }\n}"
            },
            "url": "{{server}}/web/dataset/search_read",
            "description": null
          },
          "response": []
        }
      ]
    }
  ]
}